services:
  # --- BANCO DE DADOS ---
  postgres-merchant-db:
    image: postgres:15-alpine
    container_name: postgres-merchant-db-container
    environment:
      POSTGRES_USER: merchantuser
      POSTGRES_PASSWORD: merchantpass
      POSTGRES_DB: merchants_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_merchant_data:/var/lib/postgresql/data
    # NOVO: Healthcheck para o banco de dados
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U merchantuser -d merchants_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- MENSAGERIA ---
  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: rabbitmq-container
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    # NOVO: Healthcheck para o RabbitMQ
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running", "-q"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # --- SERVIÇO DE LOJISTAS (MERCHANT) ---
  merchant-api:
    container_name: merchant-api-container
    build:
      context: ./merchant-service
      dockerfile: Dockerfile
    env_file:
      - ./merchant-service/.env
    # ALTERADO: Agora espera o banco de dados estar saudável
    depends_on:
      postgres-merchant-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # --- SERVIÇO DE PAGAMENTOS (PAYMENT) ---
  payment-api:
    container_name: payment-api-container
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    env_file:
      - ./payment-service/.env
    # ALTERADO: Agora espera o banco E o RabbitMQ estarem saudáveis
    depends_on:
      postgres-merchant-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # --- SERVIÇO DE NOTIFICAÇÕES ---
  notification-service:
    container_name: notification-service-container
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    # ALTERADO: Agora espera o RabbitMQ estar saudável
    depends_on:
      rabbitmq:
        condition: service_healthy

  # --- API GATEWAY ---
  api-gateway:
    container_name: api-gateway-container
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8080:3000"
    # ALTERADO: Agora espera os serviços estarem saudáveis
    depends_on:
      merchant-api:
        condition: service_healthy
      payment-api:
        condition: service_healthy

volumes:
  postgres_merchant_data: